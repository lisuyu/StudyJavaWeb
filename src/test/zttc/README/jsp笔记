新建使生成的jsp文件：

<%--
  Created by IntelliJ IDEA.
  User: Administrator
  Date: 2019/3/30 0030
  Time: 11:51
  To change this template use File | Settings | File Templates.
--%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<html>
  <head>
    <title>$Title$</title>
  </head>
  <body>
  $END$
  </body>
</html>

使用jsp方便的使用Java来编写代码

jsp原理
    设置虚拟路径，将jsp发布到Tomcat中
    值得启动Tomcat后就可以访问该程序,这样操作之后才能看到后面的
    [编译的时候不产生servlet文件，发布到web容器的时候，产生servlet文件，如果是tomcat容器，那么就在Tomcat_path\work\Catalina\localhost\branch\org\apache\jsp下面。]
    【发布的两种方法】
    在tomcat\work\Cataline\localhost\ts\org\apache\jsp中有由【jsp】生成的Servlet

    jsp之所以可以访问，是因为jsp的web容器直接将其转换为Servlet

    如果jsp出现错误，页面报错的内容是以Servlet中的错误为准

    jsp:在<%%>中的代码定义在service中
    在<%! %>中的代码会定义为全局变量，可以在其中写函数

重定向

    response.sendRedirect("03.jsp");    对于response.sendRedirect()跳转，跳转之后依然会执行剩下的代码才进行跳转
    跳转之后加  return；    /*会执行完后面的代码才跳转，浏览器地址会变*/  不能传中文  客户端跳转


    <jsp:forward page=""></jsp:forward> 地址不变 服务器端跳转
    中文参数依然无法解析，基于GBK解码

绝对路径和相对路径

    相对路径
    <a href="../01/03.jsp">访问03页面</a>
    <img src="../img/ycy.jpg"/>

    绝对路径
    /  可以返回整个web项目的根目录
    <a href="/WebTest_war_exploded/01/03.jsp">访问03的绝对路劲</a>
    绝对路径不能写死
    绝对路径指的是基于根目录进行访问，一般都是使用 / 开头

    最佳实践：

        在开发过程中一般是使用绝对路径来访问地址
        在Tomcat中，绝对路径会指向网站的根目录，很多时候网站在开发过程中都有一个上下文路径，此时如果通过绝对路径访问需要加上上下文路径
        为了不将上下文硬编码，可以通过request.getContextPath()来获取上下文路径

jsp页面设计：包含

包含的文件不要写其他的信息，因为包含时会将所有的都包含进去
只留：
<%@ page contentType="text/html;charset=UTF-8" language="java" %>


<!--特别注意，在使用包含时，如果用的是绝对路径，不用再增加上下文路径，会默认自己增加上下文，动态包含-->
<%@include file="/inc/top.jsp"%>

<%--静态包含--%>
<jsp:include page="/inc/top.jsp"></jsp:include>

静态包含表示：导入的文件会鲜卑编译成HTML文件，然后导入

动态包含表示：不进行任何编译，直接将要导入的文件，原样导入，然后在被导入的页面中共同编译

在开发中多使用静态包含，避免导入文件和被导入文件发生变量名冲突。重复定义变量。


可以传递对象的几个内置参数
pageContext （对于Servlet没有）
    当前页面存在，发生跳转之后不存在
request（HttpRequestServlet）
    当前页面存在，服务器跳转存在，客户端跳转不存在
session （HttpSession）
    浏览器关闭之后不存在，服务器端，客户端都存在
application（ServletContext）
    服务器没重启都存在

尽量使用作用域小的